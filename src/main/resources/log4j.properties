status = error
dest = err
name = PropertiesConfig

property.filename = log/CrunchifyTest.log

filter.threshold.type = ThresholdFilter
filter.threshold.level = debug

appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %m%n

appender.rolling.type = RollingFile
appender.rolling.name = RollingFile
appender.rolling.fileName = ${filename}
appender.rolling.filePattern = target/rolling2/test1-%d{MM-dd-yy-HH-mm-ss}-%i.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d %p %C{1.} [%t] %m%n
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 2
appender.rolling.policies.time.modulate = true
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=100MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 5

appender.list.type = List
appender.list.name = List
appender.list.filter.threshold.type = ThresholdFilter
appender.list.filter.threshold.level = error

logger.rolling.name = com.example.my.app
logger.rolling.level = debug
logger.rolling.additivity = false
logger.rolling.appenderRef.rolling.ref = RollingFile

rootLogger.level = info
rootLogger.appenderRef.stdout.ref = STDOUT



#name=PropertiesConfig
#property.filename = logs
#appenders = console, file
#appender.console.type = Console
#appender.console.name = STDOUT
#appender.console.layout.type = PatternLayout
#appender.console.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n
#appender.file.type = File
#appender.file.name = LOGFILE
#appender.file.fileName=/Users/mingjingtang/IdeaProjects/selenium/out/log4j-application.log
#appender.file.layout.type=PatternLayout
#appender.file.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n
#loggers=file
#logger.file.name=guru.springframework.blog.log4j2properties
#logger.file.level = debug
#logger.file.appenderRefs = file
#logger.file.appenderRef.file.ref = LOGFILE
#rootLogger.level = debug
#rootLogger.appenderRefs = stdout
#rootLogger.appenderRef.stdout.ref = STDOUT





#
# log4j 1.x Config.
#
# Tutorial link:
# http://stackoverflow.com/questions/20674419/where-to-put-log4j-properties-in-java-gradle-web-application-on-eclipse

## Root logger option
#log4j.rootLogger=debug, file, stdout
#
## Riderect log messages to a log file
#log4j.appender.file=org.apache.log4j.RollingFileAppender
#log4j.appender.file.File=/Users/mingjingtang/IdeaProjects/selenium/out/log4j-application.log
#log4j.appender.file.maxFileSize=5MB
#log4j.appender.file.maxBackupIndex=10
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n
#
## do not append the old file. Create a new log file everytime
#log4j.appender.file.Append=false
#
#
#
#
## Application Logs
#log4j.logger.devpinoyLogger=DEBUG, dest1
#log4j.appender.dest1=org.apache.log4j.RollingFileAppender
#log4j.appender.dest1.maxFileSize=5MB
#log4j.appender.dest1.maxBackupIndex=3
#log4j.appender.dest1.layout=org.apache.log4j.PatternLayout
#log4j.appender.dest1.layout.ConversionPattern=%d{dd/MM/yyyy HH:mm:ss} %c %m%n
#log4j.appender.dest1.File=/Users/mingjingtang/IdeaProjects/selenium/src/main/resources/test.logs
#
##do not append the old file. Create a new log file everytime
#log4j.appender.dest1.Append=false



